pipeline {
    agent any
    

    tools{ //herramientas utilizadas para la ejecucion, previamente configuradas
        gradle 'gradle'
    }
    environment { //parametros
        TAG = "${params.TAG}"
    }
    
    stages{  //etapas, se define el trabajo del pipeline dividido en bloques stage
        stage('limpiar espacio de trabajo'){
            cleanWs()
        }
        stage('git clone'){
            steps{
                //clono el repositorio desde Github
                git branch: 'main', url: 'https://github.com/mbelengonzalez168/Framework_Academia_Tsoft.git'
            }
        }
        stage('Xvfb') {
            steps {
                sh 'Xvfb :99 -ac -screen 0 1280x1024x24 & export DISPLAY=$DISPLAY'
            }
        }
        stage('exec gradle'){
            steps{
                //imprimo la version de graddle
                sh 'echo ${TAG}'
                sh 'gradle --version'
                sh 'gradle runWithCucumber -P tags="@$TAG"' //${tag)} utilizacion del parametro
                sh 'ls'
            }
        }
        stage('load test execution'){ // Intregracion con jenkins instrucciones de conexion
            steps {
                echo "xray"
                echo "Generando token"
                sh '''
                    token=$(curl -H "Content-Type: application/json" -X POST --data @"cloud_auth.json" https://xray.cloud.getxray.app/api/v2/authenticate| tr -d '"')
                    curl -H "Content-Type: multipart/form-data" -X POST -F info=@info.json -F results=@results/Cucumber.json -H "Authorization: Bearer $token" https://xray.cloud.getxray.app/api/v2/import/execution/cucumber/multipart
                    curl -D- -X POST "https://smoke-test-pj.atlassian.net/rest/api/3/issue/$key/attachments" -H 'X-Atlassian-Token: no-check' -F "file=@results/reporteQA.pdf" -H 'application/octet-stream' -H 'Authorization: Basic YmVsZW4uZ29uemFsZXpAdHNvZnRnbG9iYWwuY29tOkFUQVRUM3hGZkdGMDFXT2tMM2ppNTFjM0p6dDY0Z2d6LTh3QlFzY1JGejJuV1BuUHRMcDFZVEVxNHlOOGpOMlluSHRTdllyeURreDcyNWhYQ3g4elllRlgxZ2xHc213cGd2OHRfZXFIY3dTUnBjQ3Nad2o5Tlp1M21UR0Q2ekRfS1hXNENiMzF0c244eTE1X1VUWHVSaXk4bVpzdmdEaldhMUc5bll0ZEpMVlBTcXNvV2YyRXBQND1BQUYzNjJGRA=='
                    '''
            }
        }//  key=$(echo "$testexecution" | jq -r '.key')
    }
}